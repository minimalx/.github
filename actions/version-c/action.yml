name: "Minimal C: Versioning"
description: "Calculate semver and generate version.h"
inputs:
  tag-prefix:
    description: 'Tag prefix (e.g. "v")'
    required: true
  project-root:
    description: 'Folder containing the project (default is root of the repo)'
    required: false
    default: "."
outputs:
  version:
    description: "Calculated semantic version"
    value: ${{ steps.version.outputs.version }}
  version_tag:
    description: "Calculated Git tag"
    value: ${{ steps.version.outputs.version_tag }}

runs:
  using: "composite"
  steps:
    # Assumes the caller already did actions/checkout with fetch-depth: 0
    - name: Calculate Version
      id: version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        tag_prefix: ${{ inputs.tag-prefix }}
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        enable_prerelease_mode: ${{ github.event_name == 'pull_request' }}
        version_format: ${{ github.ref == 'refs/heads/main' && '${major}.${minor}.${patch}' || '${major}.${minor}.${patch}-dev${increment}' }}
        change_path: ${{ inputs.project-root }}

    - name: Export Version to Env
      shell: bash
      run: |
        echo "VERSION=${{ steps.version.outputs.version }}" >> "$GITHUB_ENV"
        echo "VERSION_TAG=${{ steps.version.outputs.version_tag }}" >> "$GITHUB_ENV"

    - name: Generate version.h
      shell: bash
      run: |
        python3 "${GITHUB_ACTION_PATH}/generate_version_h.py" \
          --version "${{ steps.version.outputs.version }}" \
          --actor "${{ github.actor }}" \
          --root "${{ inputs.project-root }}"
