name: "Publish STM32 Firmware (GitHub Release â†’ AWS CodeArtifact)"
description: |
  Bundles STM32 firmware artifacts, uploads them to a GitHub release, and
  publishes the bundle to AWS CodeArtifact. Mirrors the behaviour of the
  Python build-deploy action: pull_request events push to the DEV repository,
  while pushes to refs/heads/main target the PROD repository.

inputs:
  tag:
    description: "Version tag to use (e.g., v1.2.3 or v1.2.3-dev4). Leading 'v' is stripped for versioning."
    required: true
  artifact-pattern:
    description: "Artifact name or glob pattern to download (actions/download-artifact pattern syntax)."
    required: true
  package-name:
    description: "CodeArtifact package name to publish."
    required: true

runs:
  using: "composite"
  steps:

    - name: Download firmware artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: ${{ inputs.artifact-pattern }}
        path: release/artifacts
        merge-multiple: true

    # Derive VERSION (strip leading v), PACKAGE and FILENAME for reuse
    - name: Derive version and filenames
      shell: bash
      run: |
        RAW="${{ inputs.tag }}"
        VERSION="${RAW#v}"
        PACKAGE="${{ inputs.package-name }}"
        FILENAME="${PACKAGE}-${VERSION}.zip"
        echo "VERSION=$VERSION"   >> "$GITHUB_ENV"
        echo "PACKAGE=$PACKAGE"   >> "$GITHUB_ENV"
        echo "FILENAME=$FILENAME" >> "$GITHUB_ENV"

    - name: Create firmware bundle (.zip)
      shell: bash
      run: |
        mkdir -p release
        (cd release && zip -r "../$FILENAME" artifacts)

    # ===== PROD path (pushes to main) =====
    - name: Configure AWS credentials (PROD)
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_CODEARTIFACT_PUBLISHER }}
        aws-region:     ${{ env.AWS_REGION_CODEARTIFACT }}
        role-duration-seconds: 900

    - name: Upload bundle to CodeArtifact (PROD / generic repo)
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      shell: bash
      run: |
        TOKEN=$(aws codeartifact get-authorization-token \
          --domain "${{ env.AWS_DOMAIN }}" \
          --domain-owner "${{ env.AWS_DOMAIN_OWNER }}" \
          --region "${{ env.AWS_REGION_CODEARTIFACT }}" \
          --query authorizationToken \
          --output text)

        curl -v -u aws:$TOKEN \
          --upload-file "$FILENAME" \
          "https://${{ env.AWS_DOMAIN }}-${{ env.AWS_DOMAIN_OWNER }}.d.codeartifact.${{ env.AWS_REGION_CODEARTIFACT }}.amazonaws.com/${{ env.AWS_STM32_REPO_PROD }}/$PACKAGE/$VERSION/$FILENAME"

    # ===== DEV path (PRs and non-main pushes) =====
    - name: Configure AWS credentials (DEV)
      if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main') }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_CODEARTIFACT_PUBLISHER }}
        aws-region:     ${{ env.AWS_REGION_CODEARTIFACT }}
        role-duration-seconds: 900

    - name: Upload bundle to CodeArtifact (DEV / generic repo)
      if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main') }}
      shell: bash
      run: |
        TOKEN=$(aws codeartifact get-authorization-token \
          --domain "${{ env.AWS_DOMAIN }}" \
          --domain-owner "${{ env.AWS_DOMAIN_OWNER }}" \
          --region "${{ env.AWS_REGION_CODEARTIFACT }}" \
          --query authorizationToken \
          --output text)

        curl -v -u aws:$TOKEN \
          --upload-file "$FILENAME" \
          "https://${{ env.AWS_DOMAIN }}-${{ env.AWS_DOMAIN_OWNER }}.d.codeartifact.${{ env.AWS_REGION_CODEARTIFACT }}.amazonaws.com/${{ env.AWS_STM32_REPO_DEV }}/$PACKAGE/$VERSION/$FILENAME"
