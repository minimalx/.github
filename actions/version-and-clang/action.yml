# File: .github/actions/c-actions/action.yml
name: "Minimal C CI helper"
description: "Composite action to handle versioning, generating version.h, formatting check"
inputs:
  tag-prefix:
    description: 'Tag prefix (e.g. "v")'
    required: true
outputs:
  version:
    description: "Calculated semantic version"
    value: ${{ steps.version.outputs.version }}
  version-tag:
    description: "Calculated Git tag"
    value: ${{ steps.version.outputs.version_tag }}
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Calculate Version
      id: version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        tag_prefix: ${{ inputs.tag-prefix }}
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        enable_prerelease_mode: ${{ github.event_name == 'pull_request' }}
        version_format: |
          ${{ github.ref == 'refs/heads/main' && '${major}.${minor}.${patch}' || '${major}.${minor}.${patch}-dev${increment}' }}

    - name: Export Version to Environment
      shell: bash
      run: |
        echo "VERSION=${{ steps.version.outputs.version }}" >> $GITHUB_ENV
        echo "VERSION_TAG=${{ steps.version.outputs.version_tag }}" >> $GITHUB_ENV

    - name: Generate version.h
      shell: bash
      run: |
        python3 "${GITHUB_ACTION_PATH}/generate_version_h.py" \
          --version "${{ steps.version.outputs.version }}" \
          --actor "${{ github.actor }}"

    - name: Formatting Check
      shell: bash
      run: |
        python3 "${GITHUB_ACTION_PATH}/formatting_check.py" \
          --base-ref "${{ github.base_ref }}" \
          --changed-exts "c,cc,cpp,h,proto"